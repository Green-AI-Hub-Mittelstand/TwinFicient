version: '3.6'

networks:
  aas-v3:
    name: twinficient-aas-v3
    internal: true

volumes:
  mongo-volume:

services:
  mongo:
    image: mongo:7.0.5-jammy
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoAdmin
      MONGO_INITDB_ROOT_PASSWORD: mongoPassword
    networks:
    - aas-v3
    # volumes:
    # -  mongo-volume:/data/db 
    # TODO set up a proper health check
    # healthcheck:
    #   test: mongo
    #   interval: 10s
    #   start_period: 5s
    #   retries: 15
    # healthcheck:
    #   test: echo 'db.stats().ok' | mongo mongo:27017/test --quiet
    #   interval: 10s
    #   timeout: 10s
    #   retries: 10
    #   start_period: 10s

  aas-registry-v3:
    image:  eclipsebasyx/aas-registry-log-mongodb:${BASYX_VERSION}
    #image:  eclipsebasyx/aas-registry-log-mem:${BASYX_VERSION}
    restart: always
    container_name: aas-registry-v3
    ports: 
    - 8082:8080
    environment:
      VIRTUAL_HOST: aas-registry-v3.${EXTERNAL_HOSTNAME}
      VIRTUAL_PORT: "8080"
      BASYX_CORS_ALLOWED_ORIGINS: "*"
      BASYX_CORS_ALLOWED_METHODS: "GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD"
      SPRING_DATA_MONGODB_URI: mongodb://mongoAdmin:mongoPassword@mongo:27017
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    networks:
    - aas-v3
    - proxy
    depends_on:
    - mongo

  sm-registry-v3:
    image:  eclipsebasyx/submodel-registry-log-mongodb:${BASYX_VERSION}
    # image:  eclipsebasyx/submodel-registry-log-mem:${BASYX_VERSION}
    restart: always
    container_name: sm-registry-v3
    ports: 
    - 8083:8080
    environment:
      VIRTUAL_HOST: sm-registry-v3.${EXTERNAL_HOSTNAME}
      VIRTUAL_PORT: "8080"
      BASYX_CORS_ALLOWED_ORIGINS: "*"
      BASYX_CORS_ALLOWED_METHODS: "GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD"
      SPRING_DATA_MONGODB_URI: mongodb://mongoAdmin:mongoPassword@mongo:27017
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    networks:
    - aas-v3
    - proxy
    depends_on:
    - mongo

  aas-environment:
    image: eclipsebasyx/aas-environment:${BASYX_VERSION}
    container_name: aas-environment
    restart: always
    ports:
    - 8081:8081
    environment:
      BASYX_AASREPOSITORY_FEATURE_REGISTRYINTEGRATION: http://aas-registry-v3:8080
      BASYX_SUBMODELREPOSITORY_FEATURE_REGISTRYINTEGRATION: http://sm-registry-v3:8080
      BASYX_AASREPOSITORY_FEATURE_AASXUPLOAD_ENABLED: true
      BASYX_CORS_ALLOWED_ORIGINS: "*"
      BASYX_CORS_ALLOWED_METHODS: "GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD"
      BASYX_EXTERNALURL: http://aas-environment.${EXTERNAL_HOSTNAME}
      VIRTUAL_HOST: aas-environment.${EXTERNAL_HOSTNAME}
      VIRTUAL_PORT: 8081
      BASYX_ENVIRONMENT: file:/files/aasx/
      SPRING_DATA_MONGODB_HOST: mongo
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: aasenvironments
      SPRING_DATA_MONGODB_AUTHENTICATION-DATABASE: admin
      SPRING_DATA_MONGODB_USERNAME: mongoAdmin
      SPRING_DATA_MONGODB_PASSWORD: mongoPassword
      BASYX_BACKEND:  MongoDB #InMemory
    volumes:
    - ./data/aasx/v3/:/files/aasx/:ro
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    networks:
    - aas-v3
    - proxy
    depends_on:
      aas-registry-v3:
        condition: service_healthy
      sm-registry-v3:
        condition: service_healthy

  aasgui:
    image: eclipsebasyx/aas-gui:${AAS_WEBUI_V3_VERSION}
    container_name: aasgui
    environment:
      CHOKIDAR_USEPOLLING: "true"
      # vite settings are defined in the .env file
      VITE_AAS_REGISTRY_PATH: ${AAS_REGISTRY_PATH}
      VITE_SUBMODEL_REGISTRY_PATH: ${SUBMODEL_REGISTRY_PATH}
      VITE_AAS_REPO_PATH: ${AAS_REPO_PATH}
      VITE_SUBMODEL_REPO_PATH: ${SUBMODEL_REPO_PATH}
      VITE_CD_REPO_PATH: ${CD_REPO_PATH}
      VIRTUAL_HOST: aasgui.${EXTERNAL_HOSTNAME}
      VIRTUAL_PORT: 3000
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    depends_on:
      aas-registry-v3:
        condition: service_healthy
      sm-registry-v3:
        condition: service_healthy    
      aas-environment:
        condition: service_healthy
    networks:
    - aas-v3
    - proxy

  digital-twin-initializer:
    # version needs to be incrementated, if you update the source code (alternatively delete the image before starting the stack)
    image: twinficient/dtw-initializer:0.0.7
    build:
      context: ./data/digital-twin-initializer
      dockerfile: Dockerfile
    container_name: digital-twin-initializer
    restart: always
    environment:
      TF_CONFIG_FOLDER: /twinficient/digitaltwin/config
      TF_AAS_REPO_ADDRESS: http://aas-environment:8081
      TF_SM_REPO_ADDRESS: http://aas-environment:8081
      TF_USE_FILE_POLLING: "true"
      TF_POLLING_INTERVAL_MILLIS: "10000"
      TF_LOG_LEVEL: INFO
      #TF_LOG_LEVEL: FINER
      # This will delete the score bucket on startup
      # TF_INFLUX_BUCKET: twinficient-score
      # TF_INFLUX_ORG: $INFLUXDB_INIT_ORG
      # TF_INFLUX_TOKEN: $INFLUXDB_INIT_ADMIN_TOKEN
      # TF_INFLUX_URL: http://influxdb:8086
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    depends_on:
      aas-registry-v3:
        condition: service_healthy
      sm-registry-v3:
        condition: service_healthy    
      aas-environment:
        condition: service_healthy        
    volumes:
    - ./config/digital-twin-initializer:/twinficient/digitaltwin/config
    networks:
    - aas-v3
    - proxy


