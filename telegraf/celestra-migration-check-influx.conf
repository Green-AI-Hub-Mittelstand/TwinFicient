# Configuration for telegraf agent
[agent]
  interval = "15m"
  round_interval = false
  metric_batch_size = 10000
  metric_buffer_limit = 1000000
  collection_jitter = "0s"
  flush_interval = "5s"
  flush_jitter = "0s"
  precision = "1s"
  debug = false
  omit_hostname = true
[[outputs.file]]
  files = ["stdout", "./tmp/influx-check"]
  data_format = "template"
  template = '{{ printf "%s: %d/%d\n" $.Fields.Company $.Fields.CompanyTotal $.Fields.Total }}'
[[inputs.http]]
  urls = [ "$INFLUX_DB_ADDRESS/api/v2/query?org=$INFLUX_ORG" ]
  method = "POST"
  body = '''
    {
    "dialect": {
    "annotations": [],
    "delimiter": ",",
    "header": false
    },
    "query": "a = from(bucket: \"$INFLUX_BUCKET\") |> range(start: 0) |> filter(fn: (r) => r._measurement == \"celestra\" and r._field == \"HgLastErr\")  |> group(columns: [\"Company\"]) |> count(column: \"_value\") |> set(key: \"join\", value: \"here\") b = from(bucket: \"twinficient\") |> range(start: 0) |> filter(fn: (r) => r._measurement == \"celestra\" and r._field == \"HgLastErr\")  |> group(columns: []) |> count(column: \"_value\") |> set(key: \"join\", value: \"here\") join(tables: {t1: a, t2: b}, on: [\"join\"]) |> rename(columns: {_value_t1: \"CompanyTotal\", _value_t2: \"Total\"}) |> keep(columns: [\"Company\", \"CompanyTotal\", \"Total\"]) ",
    "type": "flux"
    }

  '''
  token = "${INFLUX_TOKEN}"
  timeout = "120s"
  success_status_codes = [200]
  data_format = "csv"
  csv_column_names =  ["measurement","result","table","Company", "CompanyTotal", "Total"]
[inputs.http.headers]
Content-type = "application/json"